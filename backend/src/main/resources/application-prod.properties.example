# ===================================================================
# Production Profile Properties (for AWS deployment)
# ===================================================================

# --- Server Configuration ---
server.port=8080
server.forward-headers-strategy=framework

# --- CORS for Production ---
app.cors.allowed-origins=https://your-frontend-domain.com

# --- OAuth2 & Cookie Settings for Production ---
app.oauth2.success-redirect=https://your-frontend-domain.com/oauth2/redirect
app.oauth2.allowed-redirect-hosts=your-frontend-domain.com,api.your-domain.com
app.cookie.domain=.your-domain.com
app.cookie.secure=true
app.cookie.same-site=None

# --- Email URLs for Production ---
app.email.verify-base-url=https://api.your-domain.com/api/auth/email/verify
app.frontend.verify-success-url=https://your-frontend-domain.com/verify-complete

# --- JWT Settings ---
app.jwt.issuer=mic-project
app.jwt.access-exp-min=60
app.jwt.refresh-exp-days=14
app.jwt.secret=YOUR_JWT_SECRET_KEY_BASE64

# --- Email Configuration ---
app.mail.default-provider=GMAIL
app.mail.double-send=true
app.mail.gmail.host=smtp.gmail.com
app.mail.gmail.port=587
app.mail.gmail.username=YOUR_GMAIL_ADDRESS
app.mail.gmail.password=YOUR_GMAIL_APP_PASSWORD
app.mail.gmail.starttls=true
app.mail.gmail.auth=true
app.mail.gmail.from=YOUR_GMAIL_ADDRESS

# --- Naver Email Configuration ---
app.mail.naver.host=smtp.naver.com
app.mail.naver.port=587
app.mail.naver.username=YOUR_NAVER_EMAIL
app.mail.naver.password=YOUR_NAVER_PASSWORD
app.mail.naver.starttls=true
app.mail.naver.auth=true
app.mail.naver.ssl=false
app.mail.naver.from=YOUR_NAVER_EMAIL

# --- Datasource (AWS RDS - MySQL) ---
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME}:${RDS_PORT}/${DB_NAME}?useSSL=true&requireSSL=true&serverTimezone=Asia/Seoul
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- JPA & Hibernate ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# --- Redis (AWS ElastiCache) ---
spring.data.redis.host=${REDIS_HOSTNAME}
spring.data.redis.port=6379

# --- Swagger (Springdoc) ---
springdoc.swagger-ui.enabled=false
springdoc.api-docs.path=/v3/api-docs

# --- OAuth2 Client Settings ---
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=YOUR_KAKAO_CLIENT_ID
spring.security.oauth2.client.registration.kakao.client-secret=YOUR_KAKAO_CLIENT_SECRET
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname,profile_image
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2
spring.security.oauth2.client.registration.naver.client-id=YOUR_NAVER_CLIENT_ID
spring.security.oauth2.client.registration.naver.client-secret=YOUR_NAVER_CLIENT_SECRET
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# --- OPENVIDU ---
openvidu.enabled=true
openvidu.url=YOUR_OPENVIDU_URL
openvidu.secret=YOUR_OPENVIDU_SECRET

# --- AWS S3 (for production) ---
cloud.aws.credentials.access-key=YOUR_AWS_ACCESS_KEY
cloud.aws.credentials.secret-key=YOUR_AWS_SECRET_KEY
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=YOUR_S3_BUCKET_NAME

# --- File Upload Settings ---
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# --- PortOne Payment Gateway ---
portone.imp-code=YOUR_PORTONE_IMP_CODE
portone.api-key=YOUR_PORTONE_API_KEY
portone.api-secret=YOUR_PORTONE_API_SECRET

# --- GPT/OpenAI API Configuration (Resume Analysis) ---
gpt.apiUrl=https://api.openai.com/v1/chat/completions
gpt.apiKey=YOUR_OPENAI_API_KEY
gpt.model=gpt-4o-mini
gpt.temperature=0.2
gpt.maxTokens=800

# --- Resume File Upload Configuration ---
resume.maxFileSizeMb=10
resume.supportedTypes=pdf,doc,docx,txt
resume.supportedMimeTypes=application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain

# --- Mail Configuration ---
app.mail.from.name=CareerFit

# --- Profile Upload Directory ---
app.upload.profile-dir=uploads/profiles

# --- Web Base URL ---
web.base-url=https://api.your-domain.com

# --- JPA Batch Configuration ---
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# --- Logging Configuration ---
logging.level.org.springframework.mail=INFO
logging.level.com.sun.mail=WARN
server.error.include-message=always
server.error.include-binding-errors=always
logging.level.org.springframework.web=INFO

# --- HTTP Request/Response Logging ---
spring.mvc.log-request-details=false
logging.level.reactor.netty.http.client=OFF
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=WARN
logging.level.org.springframework.web.client.RestTemplate=WARN
server.tomcat.accesslog.enabled=false
