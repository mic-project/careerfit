# Server
server.port=8080
server.forward-headers-strategy=framework

# CORS (로컬 개발)
app.cors.allowed-origins=http://localhost:3000,http://localhost:5173

# Datasource (MySQL 로컬)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/micproject?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=utf8&rewriteBatchedStatements=true
spring.datasource.username=YOUR_DB_USERNAME
spring.datasource.password=YOUR_DB_PASSWORD

# JPA/Hibernate (로컬 개발)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# Redis (로컬)
spring.data.redis.host=localhost
spring.data.redis.port=6379

# --- JWT (반드시 변경할 것!) ---
app.jwt.issuer=mic-project
app.jwt.access-exp-min=60
app.jwt.refresh-exp-days=14
app.jwt.secret=YOUR_JWT_SECRET_KEY_BASE64

# 쿠키(HTTP) 설정
# 로컬은 Lax로 충분
app.cookie.same-site=Lax
app.cookie.secure=false

# 소셜로그인 성공 후 리다이렉트 (각 환경에 맞게 수정 필!)
#app.cookie.domain=
app.oauth2.success-redirect=http://localhost:5173/oauth2/redirect
app.oauth2.allowed-redirect-hosts=localhost,127.0.0.1

# OAuth2

# Google
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Kakao
spring.security.oauth2.client.registration.kakao.client-id=YOUR_KAKAO_CLIENT_ID
spring.security.oauth2.client.registration.kakao.client-secret=YOUR_KAKAO_CLIENT_SECRET
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname,profile_image
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver
spring.security.oauth2.client.registration.naver.client-id=YOUR_NAVER_CLIENT_ID
spring.security.oauth2.client.registration.naver.client-secret=YOUR_NAVER_CLIENT_SECRET
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Swagger (로컬 on)
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# OpenVidu (로컬은 보통 off)
openvidu.enabled=false
openvidu.url=YOUR_OPENVIDU_URL
openvidu.secret=YOUR_OPENVIDU_SECRET

# File Upload Settings (최대 용량 등)
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# === Email routing ===
app.mail.default-provider=GMAIL
app.mail.double-send=true

# ==== Gmail (또 다른방법 등) ====
app.mail.gmail.host=smtp.gmail.com
app.mail.gmail.port=587
app.mail.gmail.username=YOUR_GMAIL_ADDRESS
app.mail.gmail.password=YOUR_GMAIL_APP_PASSWORD
app.mail.gmail.starttls=true
app.mail.gmail.auth=true

# ==== Naver ====
app.mail.naver.host=smtp.naver.com
app.mail.naver.port=587
app.mail.naver.username=YOUR_NAVER_EMAIL
app.mail.naver.password=YOUR_NAVER_PASSWORD
app.mail.naver.starttls=true
app.mail.naver.auth=true
app.mail.naver.ssl=false

# 이메일 인증링크 URL
app.email.verify-base-url=http://localhost:8080/api/auth/email/verify
app.frontend.verify-success-url=http://localhost:5173/verify-complete

app.mail.gmail.from=YOUR_GMAIL_ADDRESS
app.mail.naver.from=YOUR_NAVER_EMAIL

# AWS S3
cloud.aws.s3.bucket=YOUR_S3_BUCKET_NAME
cloud.aws.credentials.access-key=YOUR_AWS_ACCESS_KEY
cloud.aws.credentials.secret-key=YOUR_AWS_SECRET_KEY
cloud.aws.region.static=ap-northeast-2

# application-local.properties
logging.level.org.springframework.mail=DEBUG
logging.level.com.sun.mail=DEBUG

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE
